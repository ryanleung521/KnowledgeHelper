// <auto-generated />
using ClassLibrary.DB_Interaction;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TestCLI.Migrations
{
    [DbContext(typeof(KnowledgeDbContext))]
    partial class KnowledgeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibrary.KnowledgeEntries.KnowledgeEntry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("content_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("parent_nodeid")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("parent_nodeid");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("ClassLibrary.KnowledgeEntries.KnowledgeEntry", b =>
                {
                    b.HasOne("ClassLibrary.KnowledgeEntries.KnowledgeEntry", "parent_node")
                        .WithMany("children_nodes")
                        .HasForeignKey("parent_nodeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("parent_node");
                });

            modelBuilder.Entity("ClassLibrary.KnowledgeEntries.KnowledgeEntry", b =>
                {
                    b.Navigation("children_nodes");
                });
#pragma warning restore 612, 618
        }
    }
}
